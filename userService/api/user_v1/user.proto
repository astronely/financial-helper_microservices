syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/astronely/financial-helper_microservices/userService/pkg/user_v1;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "User API"
    version: "1.0.0"
    contact: {
      name: "astronely"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service UserV1 {
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/user/v1/create"
      body: "*"
    };
  };

  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/user/v1/get"
    };
  };

  rpc List(ListRequest) returns (ListResponse){
    option (google.api.http) = {
      get: "/user/v1/list"
    };
  };

  rpc Update(UpdateRequest) returns (UpdateResponse){
    option (google.api.http) = {
      patch: "/user/v1/update"
      body: "*"
    };
  };

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/user/v1/delete"
    };
  };
}

message UserInfo {
  string email = 1 [(validate.rules).string.email = true];
  string name = 2 [(validate.rules).string = {min_len:5, max_len: 100}];
}

message User {
  int64 id = 1 [(validate.rules).int64.gte = 0];
  UserInfo info = 2 [(validate.rules).message.required = true];
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UpdatedUserInfo {
  google.protobuf.StringValue email = 1 [(validate.rules).string.email = true];
  google.protobuf.StringValue name = 2 [(validate.rules).string = {min_len:5, max_len: 100}];
  google.protobuf.StringValue password = 3 [(validate.rules).string = {min_len:8}];
}

message CreateRequest {
  UserInfo info = 1 [(validate.rules).message.required = true];
  string password = 2 [(validate.rules).string = {min_len:8}];
}

message CreateResponse {
  int64 id = 1;
  string token = 2;
}

message GetRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
}

message GetResponse {
  User user = 1;
}
message ListRequest {
  int64 limit = 1 [(validate.rules).int64.gte = 0];
  int64 offset = 2 [(validate.rules).int64.gte = 0];
}

message ListResponse {
  repeated User users = 1;
}

message UpdateRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
  UpdatedUserInfo info = 2 [(validate.rules).message.required = true];
}

message UpdateResponse {
  int64 id = 1;
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
}