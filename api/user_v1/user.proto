syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

option go_package = "github.com/astronely/financial-helper_microservices/pkg/user_v1;user_v1";

service UserV1 {
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/user/v1/create"
      body: "*"
    };
  };

  rpc Login(LoginRequest) returns (LoginResponse);

  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/user/v1/get"
    };
  };

  rpc List(ListRequest) returns (ListResponse){
    option (google.api.http) = {
      get: "/user/v1/list"
    };
  };

  rpc Update(UpdateRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/user/v1/update"
      body: "*"
    };
  };

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/user/v1/delete"
    };
  };

  rpc IsAuth(IsAuthRequest) returns (IsAuthResponse){
    option (google.api.http) = {
      get: "/user/v1/isAuth"
    };
  };
}

message UserInfo {
  string email = 1;
  string name = 2;
}

message User {
  int64 id = 1;
  UserInfo info = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UpdatedUserInfo {
  google.protobuf.StringValue email = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue password = 3;
}

message CreateRequest {
  UserInfo info = 1;
  string password = 2;
}

message CreateResponse {
  int64 id = 1;
  string token = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  User user = 1;
}

message ListRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message ListResponse {
  repeated User users = 1;
}

message UpdateRequest {
  int64 id = 1;
  UpdatedUserInfo info = 2;
}

message DeleteRequest {
  int64 id = 1;
}

message IsAuthRequest {
  string token = 1;
}

message IsAuthResponse {
  bool isAuth = 1;
}