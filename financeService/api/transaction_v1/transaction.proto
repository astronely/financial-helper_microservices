syntax = "proto3";

package transaction_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/astronely/financial-helper_microservices/financeService/pkg/transaction_v1;transaction_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Transaction API"
    version: "1.0.0"
    contact: {
      name: "astronely"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service TransactionV1 {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/transaction/create",
      body: "*"
    };
  };

  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      post: "/api/v1/transaction/get"
    };
  };

  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      post: "/api/v1/transaction/list"
    };
  };

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/transaction/delete"
    };
  };

  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      post: "/api/v1/transaction/update",
      body: "*"
    };
  };
}

// -------------------------------------------------------------------------

message TransactionInfo {
  int64 owner_id = 1 [(validate.rules).int64.gte = 0];
  int64 wallet_id = 2 [(validate.rules).int64.gte = 0];
  int64 board_id = 3 [(validate.rules).int64.gte = 0];
  string sum = 4 [(validate.rules).string = {min_len:1}];
}

message TransactionDetails {
  int64 id = 1 [(validate.rules).int64.gte = 0]; // Возможно эта информация не нужна в коде (только в бд)
  TransactionDetailsInfo info = 2 [(validate.rules).message.required = true];
}

message TransactionDetailsInfo {
  string name = 1 [(validate.rules).string = {min_len:1}];
  int64 category = 2 [(validate.rules).int64.gte = 0]; // TODO: Сделать валидацию > чем 0 и < чем максимальный id категории
  google.protobuf.Timestamp transaction_date = 3;
}

message TransactionCategory {
  string name = 1;
  string description = 2;
}

message FilterInfo {
  google.protobuf.Int64Value category = 1 [(validate.rules).int64.gte=0];
  google.protobuf.Timestamp transaction_date = 2;
  google.protobuf.Int64Value owner_id = 3 [(validate.rules).int64.gte=0];
  google.protobuf.Int64Value wallet_id = 4 [(validate.rules).int64.gte=0];
}

message Transaction {
  int64 id = 1 [(validate.rules).int64.gte = 0];
  TransactionInfo info = 2 [(validate.rules).message.required = true];
  int64 details_id = 3 [(validate.rules).int64.gte = 0];
  google.protobuf.Timestamp updated_at = 4;
  google.protobuf.Timestamp created_at = 5;
}

message UpdateTransactionInfo {
  google.protobuf.Int64Value wallet_id = 1 [(validate.rules).int64.gte = 0];
  google.protobuf.StringValue sum = 2 [(validate.rules).string = {min_len:1}];
  google.protobuf.StringValue name = 3 [(validate.rules).string = {min_len:1}];
  google.protobuf.Int64Value category = 4 [(validate.rules).int64.gte = 0];
}

message CreateRequest {
  TransactionInfo info = 1 [(validate.rules).message.required = true];
  TransactionDetailsInfo detailsInfo = 2 [(validate.rules).message.required = true];
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
  FilterInfo filterInfo = 2;
}

message GetResponse {
  Transaction transaction = 1;
  TransactionDetails details = 2;
  TransactionCategory category = 3;
}

message ListRequest {
  int64 limit = 1 [(validate.rules).int64.gte = 0];
  int64 offset = 2 [(validate.rules).int64.gte = 0];
  FilterInfo filterInfo = 3;
}

message ListResponse {
  repeated GetResponse transactions = 1;
}

message UpdateRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
  UpdateTransactionInfo info = 2 [(validate.rules).message.required = true];
}

message UpdateResponse {
  int64 id = 1;
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64.gte = 0];
}
